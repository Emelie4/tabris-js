{
  "version": "2.0.0",
  "presentation": {
    "reveal": "always",
    "focus": false,
    "panel": "dedicated",
    "showReuseMessage": false
  },
  "type": "shell",
  "tasks": [
    {
      "label": "build",
      "group": {
        "isDefault": true,
        "kind": "build"
      },
      "command": "grunt",
      "args": [
        "clean",
        "build"
      ]
    },
    {
      "label": "serve snippet",
      "command": "tabris",
      "group": "build",
      "args": [
        "serve",
        "-a",
        "-i",
        "-w",
        "-p",
        "${fileDirname}",
        "-m",
        "dist/${fileBasenameNoExtension}.js"
      ],
      "problemMatcher": [
        "$tsc-watch"
      ],
      "isBackground": true
    },
    {
      "label": "serve snippet (current build)",
      "group": "build",
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "cd ${fileDirname} && npm install ${workspaceRoot}/build/tabris --no-save && tabris serve  -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "osx": {
        "command": "bash",
        "args": [
          "-c",
          "cd ${fileDirname} && npm install ${workspaceRoot}/build/tabris --no-save && tabris serve  -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "\"cd ${fileDirname} & npm install ${workspaceRoot}\\build\\tabris --no-save & tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js\""
        ]
      },
      "problemMatcher": [
        "$tsc-watch"
      ],
      "isBackground": true
    },
    {
      "label": "serve snippet (fresh build)",
      "osx": {
        "command": "bash",
        "args": [
          "-c",
          "grunt clean build && cd ${fileDirname} && npm install ${workspaceRoot}/build/tabris --no-save && tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "grunt clean build && cd ${fileDirname} && npm install ${workspaceRoot}/build/tabris --no-save && tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "\"grunt clean build & cd ${fileDirname} & npm install ${workspaceRoot}\\build\\tabris --no-save & tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js\""
        ]
      },
      "problemMatcher": [
        "$tsc-watch"
      ],
      "isBackground": true
    },
    {
      "label": "serve snippet (default build)",
      "group": "build",
      "osx": {
        "command": "bash",
        "args": [
          "-c",
          "cd ${fileDirname} && npm remove tabris && npm install tabris --no-save && tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "cd ${fileDirname} && npm remove tabris && npm install tabris --no-save && tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "\"cd ${fileDirname} & npm remove tabris & npm install tabris --no-save & tabris serve -a -i -w -m ./dist/${fileBasenameNoExtension}.js\""
        ]
      },
      "problemMatcher": [
        "$tsc-watch"
      ],
      "isBackground": true
    },
    {
      "label": "test all",
      "command": "grunt",
      "args": [
        "test"
      ],
      "group": "test"
    },
    {
      "label": "test spec",
      "command": "grunt",
      "args": [
        "exec:test_spec",
        "--spec=${relativeFile}"
      ],
      "problemMatcher": []
    },
    {
      "label": "test spec (bail)",
      "command": "node",
      "args": [
        "node_modules/mocha/bin/mocha",
        "--colors",
        "--require",
        "ts-node/register",
        "--bail",
        "${relativeFile}"
      ],
      "options": {
        "env": {
          "TS_NODE_PROJECT": "./tsconfig.json",
          "TS_NODE_TRANSPILE_ONLY": "true"
        }
      },
      "group": {
        "kind": "test",
        "isDefault": true
      }
    },
    {
      "label": "test typings",
      "command": "grunt",
      "group": "test",
      "args": [
        "clean",
        "build",
        "copy:test_ts",
        "exec:verify_typings",
        "verify_typings_fail"
      ]
    },
    {
      "command": "npx",
      "args": [
        "eslint",
        "--ext",
        ".js,.jsx,.ts,.tsx",
        "."
      ],
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "label": "eslint: lint whole folder"
    },
    {
      "command": "npx",
      "args": [
        "eslint",
        "--fix",
        "--ext",
        ".js,.jsx,.ts,.tsx",
        "."
      ],
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "label": "eslint: fix whole folder"
    },
    {
      "command": "npx",
      "args": [
        "eslint",
        "--fix",
        "--ext",
        ".js,.jsx,.ts,.tsx",
        "${relativeFile}"
      ],
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "label": "eslint: fix file"
    }
  ]
}
