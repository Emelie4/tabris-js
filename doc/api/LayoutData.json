{
  "type": "LayoutData",
  "category": "data",
  "constructor": {
    "access": "public",
    "parameters": [
      {
        "name": "parameters",
        "type": "LayoutDataProperties",
        "description": "An object containing some or all `LayoutData` properties. Constraints have to be instances of the Constraint class. Any omitted property defaults to 'auto'."
      }
    ]
  },
  "description": "Provides layout information for a widget to be used by the parent widget when determining its size and position. See also ${doc:LayoutDataValue}",
  "properties": {
    "left": {
      "type": {"union": ["Constraint", "'auto'"]},
      "description": "The position of the widget's left edge relative to the parent or a sibling widget. Must not be negative.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "top": {
      "type": {"union": ["Constraint", "'auto'"]},
      "description": "The position of the widget's top edge relative to the parent or a sibling widget. Must not be negative.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "right": {
      "type": {"union": ["Constraint", "'auto'"]},
      "description": "The position of the widget's right edge relative to the parent or a sibling widget. Must not be negative.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "bottom": {
      "type": {"union": ["Constraint", "'auto'"]},
      "description": "The position of the widget's bottom edge relative to the parent or a sibling widget. Must not be negative.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "width": {
      "type": {"union": ["Dimension", "'auto'"]},
      "description": "The width of the widget.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "height": {
      "type": {"union": ["Dimension", "'auto'"]},
      "description": "The height of the widget.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "centerX": {
      "type": {"union": ["Offset", "'auto'"]},
      "description": "The horizontal position of the widget's center relative to the parent's center.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "centerY": {
      "type": {"union": ["Offset", "'auto'"]},
      "description": "The vertical position of the widget's center relative to the parent's center.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    },
    "baseline": {
      "type": {"union": ["SiblingReference", "'auto'"]},
      "description": "The vertical position of the widget's baseline relative to a sibling widget.",
      "const": true,
      "default": "'auto'",
      "readonly": true
    }
  },
  "methods": {
    "toString": {
      "description": "Returns a string representation of LayoutData.",
      "returns": "string"
    },
    "equals": {
      "description": "Tests if the given value is a `LayoutData` instance that is deeply equal to this one.",
      "parameters": [{"name": "value", "type": "LayoutData"}],
      "returns": "boolean"
    }
  },
  "statics": {
    "methods": {
      "from": {
        "parameters": [
          {
            "name": "layoutDataValue",
            "description": "The value to create",
            "type": "LayoutDataValue"
          }
        ],
        "description": "Creates a new instance of LayoutData using any valid layoutData expression. For any other value, including `null`, the method throws.",
        "returns": "LayoutData"
      }
    },
    "properties": {
      "next": {
        "readonly": true,
        "type": "typeof Constraint.next",
        "description": "A ${doc:SiblingReference} indicating the next widget in the list of children attached to the same parent. Used by the [`baseline`](#baseline) property. An alias of `Constraint.next`."
      },
      "prev": {
        "readonly": true,
        "type": "typeof Constraint.prev",
        "description": "A ${doc:SiblingReference} indicating the previous widget in the list of children attached to the same parent. Used by the [`baseline`](#baseline) property. An alias of `Constraint.next`."
      },
      "center": {
        "readonly": true,
        "type": "LayoutData",
        "description": "An instance of LayoutData that centers a widget horizontally and vertically. Equivalent to `LayoutData.from({centerX: 0, centerY: 0})`"
      },
      "stretch": {
        "readonly": true,
        "type": "LayoutData",
        "description": "An instance of LayoutData that makes a widget fill the inner width and height of its parent (padding excluded). Equivalent to `LayoutData.from({left: 0, top: 0, right: 0, bottom: 0})`."
      },
      "stretchX": {
        "readonly": true,
        "type": "LayoutData",
        "description": "An instance of LayoutData that makes a widget as wide as its parent (padding excluded). Equivalent to `LayoutData.from({left: 0, right: 0})`."
      },
      "stretchY": {
        "readonly": true,
        "type": "LayoutData",
        "description": "An instance of LayoutData that makes a widget as high as its parent (padding excluded). Equivalent to `LayoutData.from({top: 0, bottom: 0})`."
      }
    }
  },
  "relatedTypes": {
    "LayoutDataValue": "layoutdatavalue",
    "LayoutDataLikeObject": "layoutdatalikeobject",
    "LayoutDataString": "layoutdatastring"
  }
}
