{
  "type": "StatusBar",
  "category": "service",
  "extends": "NativeObject",
  "description": "The status bar is the area where notifications, status icons and device time are displayed. The singleton instance can be accessed via `statusBar`.",
  "constructor": {
    "access": "private",
    "parameters": [
      {
        "name": "properties",
        "type": {
          "interface": "Properties",
          "generics": ["StatusBar"]
        },
        "optional": true,
        "description": "Sets all key-value pairs in the properties object as widget properties."
      }
    ]
  },
  "object": "statusBar",
  "properties": {
    "jsxAttributes": {
      "const": true,
      "readonly": true,
      "ts_only": true,
      "type": "JSXAttributes<this> & {children?: never}"
    },
    "theme": {
      "type": "string",
      "values": [
        "default",
        "light",
        "dark"
      ],
      "default": "default",
      "description": "Defines the shade used on the status bar. A `dark` theme sets the foreground icons to be of a light color, whereas `light` sets the icons to a dark color. The theme should be set in conjunction with the `background` property for contrast. The value `default` selects the default theme that depends on the device and on the app. Available on iOS and Android 6+."
    },
    "displayMode": {
      "type": "string",
      "values": [
        "default",
        "hide",
        "float"
      ],
      "default": "default",
      "description": "Controls how the status bar is positioned relative to the `contentView`. The value `default` places the content below the status bar. The `hide` option lets the status bar disappear, making more room for the content. The `float` option lets the content flow underneath the status bar."
    },
    "height": {
      "type": "number",
      "readonly": true,
      "const": true,
      "description": "The height of the status bar in device independent pixel. Can be used in conjunction with the `displayMode` `'float'` to offset the content as to not have it covered by the status bar."
    },
    "background": {
      "type": "ColorValue",
      "description": "Background color of the status bar. Should be used in conjunction with the `theme` property to keep the status bar icons legible."
    }
  },
  "events": {
    "tap": {
      "description": "Fired when status bar is tapped.",
      "parameters": {
        "touches": {
          "description": "Touch coordinates relative to the origin coordinates of the widget.",
          "type": "{x: number, y: number}[]"
        }
      },
      "platforms": {
        "android": false
      }
    }
  },
  "links": [
    {
      "title": "Demonstrating various `StatusBar` properties",
      "snippet": "statusbar.js"
    }
  ]
}
